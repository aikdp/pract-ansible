#Create Ec2 with ansible
- name: Creating ec2 insatnce
  hosts: local
  connection: local
  become: yes
  vars:
    # python_venv_path: "/opt/myenv"
    # python_libs:
    #   - boto3
    #   - botocore
    instances:
      - mysql
      - backend
      - frontend
    domain_name: "telugudevops.online"
  tasks:

# sudo dnf install python3.12 python3.12-pip -y
  # - name: Install required system packages
  #   dnf:
  #     name:
  #       - python3
  #       - python3-pip
  #       # - python3-venv
  #     state: present
  #     update_cache: yes

  # - name: Create a Python virtual environment
  #   command: python3 -m venv {{ python_venv_path }}
  #   args:
  #     creates: "{{ python_venv_path }}"

  # - name: Upgrade pip inside virtual environment
  #   command: "{{ python_venv_path }}/bin/pip install --upgrade pip"

  # - name: Install Python libraries inside virtual environment
  #   command: "{{ python_venv_path }}/bin/pip install {{ item }}"
  #   loop: "{{ python_libs }}"

  #install libarraies to connect aws
  - name: Install libraries for python
    ansible.builtin.pip:
      name: 
        - boto3
        - botocore
      executable: pip3.9

  - name: create instances with existing keypairs
    amazon.aws.ec2_instance:
      name: "{{ item }}"
      # key_name: "jenkins"
      region: "us-east-1"
      vpc_subnet_id: "subnet-020e28d5acdc9ff4f"
      instance_type: "t3.micro"
      security_group: "sg-0f487d954cbe820ef"
      image_id: "ami-09c813fb71547fc4f" #devops-practice
      # image_id: "ami-084568db4383264d4" #ubuntu
      tags:
        Environment: Ansible
    loop: "{{ instances }}"
    register: ec2_instances
  
  #create Route53 records private ips
  - name: create A record with 3 IPs
    amazon.aws.route53:
      state: present
      zone: "{{ domain_name }}"
      record: "{{ item.item}}.{{ domain_name }}"          #mysql.telugudevops.online
      type: A
      ttl: 1
      value: "{{ item.instances[0].private_ip_address }}" #172.33.2.22
      wait: true
      overwrite: true
    loop: "{{ ec2_instances.results }}"
  
   #create Route53 records public ip for frontend
  - name: create A record with for frontend
    amazon.aws.route53:
      state: present
      zone: "{{ domain_name }}"
      record: "{{ domain_name }}"          #telugudevops.online
      type: A
      ttl: 1
      value: "{{ item.instances[0].public_ip_address }}" #44.25.6.0
      wait: true
      overwrite: true
    loop: "{{ ec2_instances.results }}"
    when: item.item == "frontend"
    